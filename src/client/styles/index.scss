@use "./constants" as c;
@use "./bs-component-styles";
@use "./setup";

html, body {
  margin: 0;
  width: 100%;
  height: 100%;

  color: c.$body-fg;
  background-color: c.$body-bg;

  line-height: 1.5em;
}

main {
  padding: c.$main-vertical-padding 0;
  min-width: c.$breakpoint-sm;
  width: 80%;
  max-width: c.$breakpoint-lg;
}

a {
  color: rgb(130, 225, 255);
  &:focus, &:hover {
    color: rgb(240, 255, 255);
  }
}

.text-black {
  color: black;
}

p {
  margin-top: map-get(c.$spacers, 2);
  margin-bottom: map-get(c.$spacers, 2);
}

.error {
  color: c.$danger;
}

h1 h2 h3 h4 h5 {
  font-weight: bold;
}

hr {
  border-color: c.$body-fg;
  margin: map-get(c.$spacers, 4) 0;
}

.b {
  font-weight: bold;
}

dl, ol, ul {
  padding-inline-start: 1em;
}

li {
  line-height: 1.75em;
}

.copy-btn {
  min-width: 12ch;
}

.no-bullets {
  list-style-type: none;
  padding-left: 0;
}

.bullets-disc {
  list-style-type: disc;
}

code, pre {
  &:not(.syntax-highlighted) {
    background-color: #111;
    color: white;
    border-radius: 0.33em;
    padding: 0.33em;
  }
}

pre {
  margin: 1em 0;
  padding: 1.5em;
}

input[type=checkbox], input[type=radio], .clickable {
  &:hover, &:focus {
    &:not(:disabled), &:not(.disabled) {
      cursor: pointer;
      // text-decoration: underline;
    }

    &:disabled, &.disabled {
      cursor: not-allowed;
      text-decoration: none;
    }
  }
}

@mixin text-lg {
  font-size: 125%;
}

.text-lg {
  @include text-lg;
}

@mixin text-md {
  font-size: 110%;
}

.text-md {
  @include text-md;
}

.repo-secrets-summary {
  @include text-lg;
  margin-bottom: 0;
  // font-weight: bold;
}

// .card-title {
//   min-height: 4em;
// }

input[type=checkbox], input[type=radio] {
  // transform: scale(1.5);
  width: 1.2rem;
  height: 1.2rem;
  margin-right: 1em;
}

input.form-control[readonly] {
  background-color: c.$gray-500;
  color: c.$dark;

  &:hover {
    cursor: not-allowed;
  }
}

.form-label:not([inline]) {
  padding-bottom: map-get(c.$spacers, 2);
}

label {
  margin: 0;
}

.btn-line {
  display: flex;
  align-items: center;

  &.even {
    & > * {
      flex: 1;
    }
  }

  &.flex-column {
    & > :not(:last-child).btn {
      margin-bottom: map-get(c.$spacers, 3);
    }
  }

  &:not(.flex-column) {
    & > :not(:last-child).btn {
      margin-right: map-get(c.$spacers, 3);
    }
  }
}

.btn-body {
  display: flex;
  justify-content: space-around;
  align-items: center;
  font-weight: bold;

  min-width: 1.6rem;
  min-height: 1.6rem;

  &.btn-body-text {
    & svg, .spinner-border {
      &:first-child {
        margin-right: 1ch;
      }

      &:last-child {
        margin-left: 1ch;
      }
    }
  }

  & .spinner-border {
    width: 1em;
    height: 1em;
  }
}

.centers {
  display: flex;
  justify-content: center;
  align-items: center;
}

.long-content {
  max-height: 500px;
  overflow-y: auto;
}

td div {
  display: table-cell;
}

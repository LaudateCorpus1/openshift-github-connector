apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.appName }}
  namespace: {{ .Values.namespace }}
  labels:
    {{- toYaml .Values.commonLabels | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- toYaml .Values.commonLabels | nindent 6 }}
  replicas: {{ .Values.serverReplicaCount }}
  template:
    metadata:
      labels:
        {{- toYaml .Values.commonLabels | nindent 8 }}
    spec:
      serviceAccountName: {{ .Values.serviceAccountName }}
      restartPolicy: Always
      dnsPolicy: ClusterFirst
      volumes:
        - emptyDir: {}
          name: tmp

        - emptyDir: {}
          name: certs

        - name: {{ .Values.servingCertSecret }}
          secret:
            secretName: {{ .Values.servingCertSecret }}
            defaultMode: 420

        {{- $addRouterCerts := lookup "v1" "Secret" .Release.Namespace "v4-0-config-system-router-certs" }}
        {{- if $addRouterCerts }}
        - name: router-cert
          secret:
            secretName: v4-0-config-system-router-certs
            defaultMode: 420
        {{ end }}

      containers:
        - name: {{ .Values.appName }}
          imagePullPolicy: Always
          image: {{ .Values.serverImage }}:{{ .Values.serverTag }}
          # command: [ "sleep", "infinity" ]
          ports:
            # - name: {{ .Values.serverHttpPortName }}
            #   containerPort: {{ .Values.serverHttpPort }}
            - name: {{ .Values.serverHttpsPortName }}
              containerPort: {{ .Values.serverHttpsPort }}

          securityContext:
            readOnlyRootFilesystem: {{ .Values.readOnlyRootFilesystem }}
            runAsNonRoot: true
            capabilities:
              drop:
                - ALL

          resources:
            limits:
              cpu: 250m
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 512Mi

          volumeMounts:
            - mountPath: /tmp
              name: tmp

            - mountPath: /var/certs
              name: certs

            - name: {{ .Values.servingCertSecret }}
              readOnly: true
              mountPath: {{ .Values.servingCADirectory }}

            {{- if $addRouterCerts }}
            - name: router-cert
              readOnly: true
              mountPath: {{ .Values.routerCADirectory }}
            {{ end }}

          env:
            - name: CLUSTER_API_SERVER
              value: {{ .Values.clusterApiServer }}

            - name: CONNECTOR_SERVICEACCOUNT_NAME
              value: {{ .Values.serviceAccountName }}

            - name: OAUTH_CLIENT_ID
              value: {{ .Values.oauthClientId }}

            - name: OAUTH_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secretName }}
                  key: {{ .Values.oauthClientSecretKeyName }}

            - name: OAUTH_CALLBACK_URL
              value: {{ tpl .Values.oauthCallbackUrl . }}

            - name: SERVING_CA_DIRECTORY
              value: {{ .Values.servingCADirectory }}

            {{- if $addRouterCerts }}
            - name: ROUTER_CA_DIRECTORY
              value: {{ .Values.routerCADirectory }}
            {{ end }}

            - name: INSECURE_TRUST_APISERVER_CERT
              value: {{ .Values.insecureTrustApiServerCert | quote }}

            - name: SESSION_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secretName }}
                  key: {{ .Values.sessionSecretKeyName }}

            - name: SESSION_STORE_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secretName }}
                  key: {{ .Values.sessionStoreKeyName }}

            - name: SESSION_STORE_PATH
              value: /tmp/sessions
